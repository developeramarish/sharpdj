<Window x:Class="SharpDj.View.SdjMainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:local="clr-namespace:SharpDj.View.UserControls"
        xmlns:converters="clr-namespace:SharpDj.Converters"
        xmlns:enum="clr-namespace:SharpDj.Enums"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        ResizeMode="CanResizeWithGrip"
        AllowsTransparency="True"
        WindowStyle="None"
        MinWidth="840"
        MinHeight="630"
        Title="Main" Height="700" Width="1090">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="50"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="250"/>
        </Grid.ColumnDefinitions>

        <local:SdjMainUserControl Grid.Row="1"  Grid.ColumnSpan="2" Visibility="{Binding MainViewVisibility,
            Converter={converters:EnumToVisibilityConverter},
            ConverterParameter={x:Static enum:MainView.Main}}"/>

        <Grid  Grid.Row="1"  Grid.ColumnSpan="2" Visibility="{Binding MainViewVisibility,
            Converter={converters:EnumToVisibilityConverter},
            ConverterParameter={x:Static enum:MainView.Room}}">
            <local:SdjRoomView DataContext="{Binding SdjRoomViewModel}"/>
        </Grid>

        <Grid Grid.Row="1" Grid.ColumnSpan="2" Visibility="{Binding SdjPlaylistViewModel.PlaylistVisibility,
            Converter={converters:EnumToVisibilityConverter},
            ConverterParameter={x:Static enum:Playlist.Visible}}">
            <local:SdjPlaylistUserControl DataContext="{Binding SdjPlaylistViewModel}"/>
        </Grid>

        <!--About-->
        <!--  <DockPanel Visibility="{Binding MainViewVisibility,
            Converter={converters:EnumToVisibilityConverter},
            ConverterParameter={x:Static enum:MainView.About}}" Grid.ColumnSpan="2">
            <DockPanel>
                <TextBlock Background="BurlyWood" TextWrapping="Wrap" Text="dashaskjfhkjasfhkasjfhkajshfkjashfasfsfasfasf" FontSize="32"/>
            </DockPanel>
        </DockPanel>-->

        <!-- Profile -->
        <Grid Grid.Row="1" Grid.ColumnSpan="2" Visibility="{Binding UserProfileVisibility,
            Converter={converters:EnumToVisibilityConverter},
            ConverterParameter={x:Static enum:UserProfile.Visible}}">
            <Grid Background="Black" Opacity="0.7">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseUp" >
                        <i:InvokeCommandAction Command="{Binding SdjUserProfileViewModel.CloseProfile}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Grid>
            <local:SdjUserProfileUserControl DataContext="{Binding SdjUserProfileViewModel}" Width="600" Height="520" Visibility="{Binding IsMaximized, Converter={converters:NotBoolToVisibilityConverter}}"/>
            <local:SdjUserProfileUserControl DataContext="{Binding SdjUserProfileViewModel}" Visibility="{Binding IsMaximized, Converter={converters:BoolVisibilityConverter}}"/>
        </Grid>

        <DockPanel Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2">
            <local:BottomBar DataContext="{Binding SdjBottomBarViewModel}"/>
        </DockPanel>

        <!-- StateButtons -->
        <Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" VerticalAlignment="Top" Background="{StaticResource BlackBrush}" Height="30">
            <local:StateButtons Background="{StaticResource BlackBrush}" DataContext="{Binding SdjStateButtonViewModel}" Height="29">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonDown" >
                        <i:InvokeCommandAction Command="{Binding LeftButtonDownOnTitleBarCommand}"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseDoubleClick">
                        <i:InvokeCommandAction Command="{Binding StateButtonMaximizeCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </local:StateButtons>
        </Grid>

        <!--LeftBarDarkScreen-->
        <Grid Row="1" RowSpan="2" Column="0" ColumnSpan="2" Background="Black" Opacity="0.7" Visibility="{Binding LeftBarVisibility,
            Converter={converters:EnumToVisibilityConverter},
            ConverterParameter={x:Static enum:LeftBar.Visible}, Mode=TwoWay}" DataContext="{Binding SdjLeftBarViewModel}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseUp" >
                    <i:InvokeCommandAction Command="{Binding MouseUpAwayFromLeftBarCommand}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Grid>

        <!--LeftBar-->
        <Grid Grid.RowSpan="2" Grid.Row="1" Grid.Column="0" Visibility="{Binding LeftBarVisibility,
            Converter={converters:EnumToVisibilityConverter},
            ConverterParameter={x:Static enum:LeftBar.Visible}, Mode=TwoWay}" DataContext="{Binding SdjLeftBarViewModel}">
            <local:SdjLeftBarView/>
        </Grid>


        <!-- Avatar -->
        <DockPanel Grid.Row="2" Margin="20 -25 0 0" HorizontalAlignment="Left" VerticalAlignment="Top" Visibility="{Binding AvatarIsVisible, Mode=TwoWay}">
            <Button Margin="0 0 0 0" Background="{StaticResource LightBrush}" DataContext="{Binding SdjBottomBarViewModel}" Command="{Binding AvatarOnClick}" Style="{StaticResource RoundButton}" Content="../Images/avatar.png"/>
        </DockPanel>

        <!--Login-->
        <DockPanel Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Grid.RowSpan="2" Visibility="{Binding MainViewVisibility,
            Converter={converters:EnumToVisibilityConverter},
            ConverterParameter={x:Static enum:MainView.Login}}" Background="{StaticResource MidBrush}">
            <local:SdjLoginView DataContext="{Binding SdjLoginViewModel}"/>
        </DockPanel>

        <!--Register-->
        <DockPanel Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Grid.RowSpan="2" Visibility="{Binding MainViewVisibility,
            Converter={converters:EnumToVisibilityConverter},
            ConverterParameter={x:Static enum:MainView.Register}}" Background="{StaticResource MidBrush}">
            <local:SdjRegisterView DataContext="{Binding SdjRegisterViewModel}"/>
        </DockPanel>

        <!--Add Playlist-->
        <Grid RowSpan="3" ColumnSpan="2" Visibility="{Binding PlaylistStateCollectionVisibility,
            Converter={converters:EnumToVisibilityConverter},
            ConverterParameter={x:Static enum:PlaylistState.Add}, Mode=TwoWay}">
            <Grid DataContext="{Binding SdjAddPlaylistCollectionViewModel}">
                <Grid Background="Black" Opacity="0.7">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseUp" >
                            <i:InvokeCommandAction Command="{Binding MouseUpAwayFromAddPlaylistCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Grid>
                <local:SdjAddPlaylistCollectionView Width="420" Height="110"></local:SdjAddPlaylistCollectionView>
            </Grid>
        </Grid>

        <!--EditPlaylist -->
        <Grid RowSpan="3" ColumnSpan="2" Visibility="{Binding PlaylistStateCollectionVisibility,
            Converter={converters:EnumToVisibilityConverter},
            ConverterParameter={x:Static enum:PlaylistState.Rename}, Mode=TwoWay}">
            <Grid DataContext="{Binding SdjEditPlaylistCollectionViewModel}">
                <Grid Background="Black" Opacity="0.7">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseUp" >
                            <i:InvokeCommandAction Command="{Binding MouseUpAwayFromEditPlaylistCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Grid>
                <local:SdjEditPlaylistCollectionView Width="420" Height="110"/>
            </Grid>
        </Grid>

        <!--RemovePlaylist-->
        <Grid RowSpan="3" ColumnSpan="2" Visibility="{Binding PlaylistStateCollectionVisibility,
            Converter={converters:EnumToVisibilityConverter},
            ConverterParameter={x:Static enum:PlaylistState.Remove}, Mode=TwoWay}">
            <Grid DataContext="{Binding SdjRemovePlaylistCollectionViewModel}">
                <Grid Background="Black" Opacity="0.7">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseUp" >
                            <i:InvokeCommandAction Command="{Binding MouseUpAwayFromRemovePlaylistCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Grid>
                <local:SdjRemovePlaylistCollectionView Width="270" Height="110"/>
            </Grid>
        </Grid>

    </Grid>
</Window>